// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

// example table used in the express router example

model MapNode {
  nodeID     String    @id
  xcoord     Float
  ycoord     Float
  floor      String
  building   String
  nodeType   String
  longName   String
  shortName  String
  startNodes MapEdge[] @relation("start")
  endNodes   MapEdge[] @relation("end")
}

model MapEdge {
  edgeID    String  @id
  startNode String
  endNode   String
  start     MapNode @relation("start", fields: [startNode], references: [nodeID])
  end       MapNode @relation("end", fields: [endNode], references: [nodeID])
}

model ServiceRequest {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  typeService String
  location    String
  employee    String
  progress    Progress
  priority    Priority

  assignedTo Employee @relation("employee", fields: [employee], references: [displayName])

  sanitationRequest     SanitationRequest?     @relation()
  transportationRequest TransportationRequest? @relation()
  maintenanceRequest    MaintenanceRequest?    @relation()
  flowerRequest         FlowerRequest?         @relation()
  religionRequest       ReligionRequest?       @relation()
}

model SanitationRequest {
  id        Int            @id
  parent    ServiceRequest @relation(fields: [id], references: [id])
  messDesc  String
  hazardous Boolean
}

model TransportationRequest {
  id              Int            @id
  parent          ServiceRequest @relation(fields: [id], references: [id])
  endLocation     String
  equipmentNeeded String
}

model MaintenanceRequest {
  id              Int            @id
  parent          ServiceRequest @relation(fields: [id], references: [id])
  personnelNeeded String
  issueType       String
}

model FlowerRequest {
  id         Int            @id
  parent     ServiceRequest @relation(fields: [id], references: [id])
  flowerType String
  recipient  String
}

model ReligionRequest {
  id            Int            @id
  parent        ServiceRequest @relation(fields: [id], references: [id])
  religionType  String
  typeOfService String
}

enum Progress {
  Unassigned
  Assigned
  InProgress
  Completed
}

enum Priority {
  Low
  Medium
  High
  Emergency
}

model Employee {
  username        String           @id
  password        String
  displayName     String           @unique
  serviceRequests ServiceRequest[] @relation("employee")
}

model HighScore {
  id    Int      @id
  time  DateTime
  score Int
}
